plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.2'
    id 'com.google.protobuf' version '0.9.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

def lombokVersion = '1.18.32'
def postgresVersion = '42.7.3'
def junitJupiterVersion = '5.10.2'
def testcontainersVersion = '1.19.7'
def mapstructVersion = '1.5.5.Final'
def citrusVersion = '4.2.0'
def testngVersion = '7.9.0'
def liquibaseCoreVersion = '4.26.0'
def javaxAnnotationVersion = '1.3.2'
def grpcSpringBootStarterVersion = '3.0.0.RELEASE'
def grpcVersion = '1.62.2'
def protobufVersion = '3.25.0'
def protocVersion = protobufVersion

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation "io.grpc:grpc-netty-shaded:${grpcVersion}"
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "com.google.protobuf:protobuf-java:${protobufVersion}"
    implementation "net.devh:grpc-spring-boot-starter:${grpcSpringBootStarterVersion}"
    testImplementation 'org.projectlombok:lombok:1.18.28'

    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    compileOnly "org.projectlombok:lombok:${lombokVersion}"

    runtimeOnly "org.postgresql:postgresql:${postgresVersion}"

    testImplementation 'org.junit.platform:junit-platform-launcher:1.10.2'
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    testImplementation "org.testcontainers:testcontainers:${testcontainersVersion}"
    testImplementation "org.testcontainers:junit-jupiter:${testcontainersVersion}"
    testImplementation "org.testcontainers:postgresql:${testcontainersVersion}"
    testImplementation "org.testng:testng:${testngVersion}"

    implementation "org.citrusframework:citrus-core:${citrusVersion}"
    implementation "org.citrusframework:citrus-spring:${citrusVersion}"
    testImplementation "org.citrusframework:citrus-jms:${citrusVersion}"
    implementation "org.citrusframework:citrus-http:${citrusVersion}"
    testImplementation "org.citrusframework:citrus-testng:${citrusVersion}"
    testImplementation "org.citrusframework:citrus-xml:${citrusVersion}"
    implementation "org.citrusframework:citrus-sql:${citrusVersion}"
    compileOnly "org.citrusframework:citrus-jmx:${citrusVersion}"
    implementation 'org.citrusframework:citrus-java-dsl:4.0.0-M1'

    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"

    implementation "org.liquibase:liquibase-core:${liquibaseCoreVersion}"
    implementation "javax.annotation:javax.annotation-api:${javaxAnnotationVersion}"
    //additional
    implementation 'org.apache.commons:commons-compress:1.26.1'
    implementation 'org.apache.ant:ant:1.10.14'
    implementation 'org.codehaus.plexus:plexus-utils:4.0.0'
    implementation 'xalan:xalan:2.7.3'
    implementation 'commons-dbcp:commons-dbcp:1.4'
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

tasks.named('test') {
    useTestNG()
    useJUnitPlatform()
}
